
// alarm-eDlg.cpp : 구현 파일
//

#include "stdafx.h"
#include "alarm-e.h"
#include "alarm-eDlg.h"
#include "afxdialogex.h"
#include "ScreenShot.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif
#define WM_TRAY_MSG WM_USER+1

// 응용 프로그램 정보에 사용되는 CAboutDlg 대화 상자입니다.

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 대화 상자 데이터입니다.
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 지원입니다.

// 구현입니다.
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}


BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)

END_MESSAGE_MAP()


// CalarmeDlg 대화 상자




CalarmeDlg::CalarmeDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CalarmeDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CalarmeDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CalarmeDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1, &CalarmeDlg::OnBnClickedButton1)
	ON_MESSAGE(WM_TRAY_MSG,TrayMsg)
	ON_WM_DESTROY()
END_MESSAGE_MAP()


// CalarmeDlg 메시지 처리기

BOOL CalarmeDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 시스템 메뉴에 "정보..." 메뉴 항목을 추가합니다.

	// IDM_ABOUTBOX는 시스템 명령 범위에 있어야 합니다.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 이 대화 상자의 아이콘을 설정합니다. 응용 프로그램의 주 창이 대화 상자가 아닐 경우에는
	//  프레임워크가 이 작업을 자동으로 수행합니다.
	SetIcon(m_hIcon, TRUE);			// 큰 아이콘을 설정합니다.
	SetIcon(m_hIcon, FALSE);		// 작은 아이콘을 설정합니다.

	ShowWindow(SW_SHOW);
	PostMessage (WM_SHOWWINDOW,FALSE, SW_OTHERUNZOOM);
	// TODO: 여기에 추가 초기화 작업을 추가합니다.
	SetTray();
	return TRUE;  // 포커스를 컨트롤에 설정하지 않으면 TRUE를 반환합니다.
}

void CalarmeDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else if(nID==SC_MINIMIZE||nID==SC_CLOSE)	//창닫기나 최소화 클릭시 숨기기
	{
		ShowWindow(SW_HIDE);
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 대화 상자에 최소화 단추를 추가할 경우 아이콘을 그리려면
//  아래 코드가 필요합니다. 문서/뷰 모델을 사용하는 MFC 응용 프로그램의 경우에는
//  프레임워크에서 이 작업을 자동으로 수행합니다.

void CalarmeDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 그리기를 위한 디바이스 컨텍스트입니다.

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 클라이언트 사각형에서 아이콘을 가운데에 맞춥니다.
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 아이콘을 그립니다.
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

// 사용자가 최소화된 창을 끄는 동안에 커서가 표시되도록 시스템에서
//  이 함수를 호출합니다.
HCURSOR CalarmeDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CalarmeDlg::OnBnClickedButton1()
{
	AfxMessageBox(ScreenShot::capture());
	ScreenShot::getlastimgfile();
}


void CalarmeDlg::SetTray()
{
	 NOTIFYICONDATA  nid;
	 nid.cbSize = sizeof(nid);
	 nid.hWnd = m_hWnd; // 메인 윈도우 핸들
	 nid.uID = IDR_MAINFRAME;  // 아이콘 리소스 ID
	 nid.uFlags = NIF_MESSAGE | NIF_ICON | NIF_TIP; // 플래그 설정
	 nid.uCallbackMessage = WM_TRAY_MSG; // 콜백메시지 설정
	 nid.hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME); // 아이콘 로드
	 lstrcpy(nid.szTip, _T("alarm-e 작동중")); 
	 Shell_NotifyIcon(NIM_ADD, &nid);
	 SendMessage(WM_SETICON, (WPARAM)TRUE, (LPARAM)nid.hIcon);
}


LRESULT CalarmeDlg::TrayMsg(WPARAM wParam, LPARAM lParam)
{
	if(lParam == WM_LBUTTONDBLCLK)
		ShowWindow(SW_SHOW);
	return 0;
}


void CalarmeDlg::OnDestroy()
{
	CDialogEx::OnDestroy();

	NOTIFYICONDATA  nid;
	nid.cbSize = sizeof(nid);
	nid.hWnd = m_hWnd; // 메인 윈도우 핸들
	nid.uID = IDR_MAINFRAME;

	// 작업 표시줄(TaskBar)의 상태 영역에 아이콘을 삭제한다.
	Shell_NotifyIcon(NIM_DELETE, &nid);
}


BOOL CalarmeDlg::PreTranslateMessage(MSG* pMsg)
{
	//키눌린 메시지가 들어올때 esc이거나 return  값이면
	//걍 리턴 시켜준다.
	if(pMsg->message == WM_KEYDOWN)
	{
		switch(pMsg->wParam)
		{
			case VK_ESCAPE:
			case VK_RETURN:
			case VK_CANCEL:
			return TRUE;
			default:
			break;
		}
	}
	if(pMsg->message == WM_SYSKEYDOWN)	//알뜨에쁘뽀
    {
        if(pMsg->wParam == VK_F4)
            return TRUE;
    }
   return CDialogEx::PreTranslateMessage(pMsg);
}
